<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>公式 on 谷栗杳</title>
        <link>http://localhost:1313/blog/tags/%E5%85%AC%E5%BC%8F/</link>
        <description>Recent content in 公式 on 谷栗杳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>谷栗杳</copyright>
        <lastBuildDate>Thu, 03 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/blog/tags/%E5%85%AC%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>矩阵旋转坐标公式</title>
        <link>http://localhost:1313/blog/post---test/%E7%9F%A9%E9%98%B5%E6%97%8B%E8%BD%AC%E5%9D%90%E6%A0%87%E5%85%AC%E5%BC%8F/</link>
        <pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/blog/post---test/%E7%9F%A9%E9%98%B5%E6%97%8B%E8%BD%AC%E5%9D%90%E6%A0%87%E5%85%AC%E5%BC%8F/</guid>
        <description>&lt;h2 id=&#34;n--n-矩阵&#34;&gt;n * n 矩阵
&lt;/h2&gt;&lt;p&gt;关于旋转，一共有 3 种情况：&lt;/p&gt;
&lt;h3 id=&#34;顺时针旋转-90-&#34;&gt;顺时针旋转 90 °
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oLd-Y/PicGoPictures/main/20241003102322.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;逆时针旋转-90-&#34;&gt;逆时针旋转 90 °
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oLd-Y/PicGoPictures/main/20241003102359.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;顺时针旋转-180-&#34;&gt;顺时针旋转 180 °
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oLd-Y/PicGoPictures/main/20241003102419.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;对于 &lt;code&gt;(i&#39; + 1) + (j + 1) = n + 1&lt;/code&gt; 的解释：我们把下标为 0 的 &lt;code&gt;i&#39;&lt;/code&gt;，&lt;code&gt;j&lt;/code&gt; 换算成从 1 开始的个数（第几个），然后它们相加之后会比实际一行/列的个数多 1 个。其余公式同理。&lt;/li&gt;
&lt;li&gt;对于一个 n * n 的矩阵中一个坐标为 (i, j) 的点，其旋转后的坐标分别为：
&lt;ol&gt;
&lt;li&gt;顺时针旋转 90 °：&lt;code&gt;(j, n - i - 1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;逆时针旋转 90 °：&lt;code&gt;(n - j - 1, i)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;顺时针旋转 180 °：&lt;code&gt;(n - i - 1, n - j - 1)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;以上公式也可以用作已知某个点 &lt;code&gt;(i, j)&lt;/code&gt;，哪个点可以通过顺时针旋转 90 °/逆时针旋转 90 °/顺时针旋转 180 ° 得到这个点。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>矩阵旋转坐标公式</title>
        <link>http://localhost:1313/blog/p/%E7%9F%A9%E9%98%B5%E6%97%8B%E8%BD%AC%E5%9D%90%E6%A0%87%E5%85%AC%E5%BC%8F/</link>
        <pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/blog/p/%E7%9F%A9%E9%98%B5%E6%97%8B%E8%BD%AC%E5%9D%90%E6%A0%87%E5%85%AC%E5%BC%8F/</guid>
        <description>&lt;h2 id=&#34;n--n-矩阵&#34;&gt;n * n 矩阵
&lt;/h2&gt;&lt;p&gt;关于旋转，一共有 3 种情况：&lt;/p&gt;
&lt;h3 id=&#34;顺时针旋转-90-&#34;&gt;顺时针旋转 90 °
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oLd-Y/PicGoPictures/main/20241003102322.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;逆时针旋转-90-&#34;&gt;逆时针旋转 90 °
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oLd-Y/PicGoPictures/main/20241003102359.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;顺时针旋转-180-&#34;&gt;顺时针旋转 180 °
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oLd-Y/PicGoPictures/main/20241003102419.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;对于 &lt;code&gt;(i&#39; + 1) + (j + 1) = n + 1&lt;/code&gt; 的解释：我们把下标为 0 的 &lt;code&gt;i&#39;&lt;/code&gt;，&lt;code&gt;j&lt;/code&gt; 换算成从 1 开始的个数（第几个），然后它们相加之后会比实际一行/列的个数多 1 个。其余公式同理。&lt;/li&gt;
&lt;li&gt;对于一个 n * n 的矩阵中一个坐标为 (i, j) 的点，其旋转后的坐标分别为：
&lt;ol&gt;
&lt;li&gt;顺时针旋转 90 °：&lt;code&gt;(j, n - i - 1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;逆时针旋转 90 °：&lt;code&gt;(n - j - 1, i)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;顺时针旋转 180 °：&lt;code&gt;(n - i - 1, n - j - 1)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;以上公式也可以用作已知某个点 &lt;code&gt;(i, j)&lt;/code&gt;，哪个点可以通过顺时针旋转 90 °/逆时针旋转 90 °/顺时针旋转 180 ° 得到这个点。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
