<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Lsp on 谷栗杳</title>
        <link>http://localhost:1313/blog/zh-cn/tags/lsp/</link>
        <description>Recent content in Lsp on 谷栗杳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>谷栗杳</copyright>
        <lastBuildDate>Tue, 03 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/blog/zh-cn/tags/lsp/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>配置 lazyvim 中的 C 及 C&#43;&#43; 开发环境</title>
        <link>http://localhost:1313/blog/zh-cn/p/%E9%85%8D%E7%BD%AE-lazyvim-%E4%B8%AD%E7%9A%84-c-%E5%8F%8A-c-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
        <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/blog/zh-cn/p/%E9%85%8D%E7%BD%AE-lazyvim-%E4%B8%AD%E7%9A%84-c-%E5%8F%8A-c-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
        <description>&lt;h3 id=&#34;lspclangd配置&#34;&gt;LSP（Clangd）配置
&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;:LazyExtras&lt;/code&gt; 中打开 &lt;code&gt;langd.clangd&lt;/code&gt; 即可。此时关闭项目，任意打开一个项目，发现还是会有很多不应该的报错。这是因为缺少项目中缺少一个 &lt;code&gt;compile_commands.json&lt;/code&gt; 帮助 lsp server 理解代码。&lt;/p&gt;
&lt;p&gt;lsp 的原理是将当前代码发给正在运行的 lsp server，lsp server 解析之后将分析结果返回，再展示到编辑器中。对于有包管理器的一些语言，可以借助其包管理器进行分析；而对于 C、C++这种比较古老的语言，没有包管理器，就需要用额外的文件来展示结构。这个文件就是 &lt;code&gt;compile_commands.json&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;理论上直接把你的项目结构按照一定的格式写入该文件然后放在项目的根目录即可。但很显然，有工具可以帮助我们完成这件事，即 &lt;a class=&#34;link&#34; href=&#34;https://github.com/rizsotto/Bear&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;bear&lt;/a&gt; 或者 &lt;a class=&#34;link&#34; href=&#34;https://github.com/nickdiego/compiledb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;compiledb&lt;/a&gt;。bear 是用 C++ 编写的，compiledb 是用 Python 编写的。&lt;/p&gt;
&lt;p&gt;由于 bear 只能在 linux 平台上使用，这里我们选择跨平台的 compiledb。&lt;/p&gt;
&lt;p&gt;首先确保系统中安装了 python。执行 &lt;code&gt;pip install compiledb&lt;/code&gt; 安装 compiledb。ubuntu 系统如果没有 pip 可以先用 &lt;code&gt;sudo apt install python3-pip&lt;/code&gt; 安装一下 pip（pip3）。&lt;/p&gt;
&lt;p&gt;如果安装完 compiledb 之后无法直接使用 compiledb 命令，可能是因为其路径没有加入到环境变量中。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;~/.bashrc&lt;/code&gt; 或者 &lt;code&gt;~/.zshrc&lt;/code&gt; 中加入如下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:/home/&amp;lt;username&amp;gt;/.local/bin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;_COMPILEDB_COMPLETE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; compiledb&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;下面那行代码用于开启 compiledb 在命令行中的补全功能。&lt;/p&gt;
&lt;p&gt;配置完成之后，我们只需要在项目的编译命令之前加上 &lt;code&gt;compiledb&lt;/code&gt;，就可以为这个项目加上 &lt;code&gt;compile_commands.json&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;例如我有一个 linux-0.11 的源码项目，在根目录下执行 &lt;code&gt;compiledb make all&lt;/code&gt;，只要编译成功，就可以为其添加 &lt;code&gt;compile_commands.json&lt;/code&gt; 文件了。&lt;/p&gt;
&lt;h3 id=&#34;参考链接&#34;&gt;参考链接
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ttys3.dev/blog/neovim-c-cpp-lsp-integration-tips&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Neovim C Cpp Lsp Integration Tips | /dev/ttyS3 Blog&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
