<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>CSAPP on 谷栗杳</title>
        <link>http://localhost:1313/blog/zh-cn/tags/csapp/</link>
        <description>Recent content in CSAPP on 谷栗杳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>谷栗杳</copyright>
        <lastBuildDate>Thu, 05 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/blog/zh-cn/tags/csapp/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>原码、反码、补码的定义及求值方法</title>
        <link>http://localhost:1313/blog/zh-cn/p/%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E8%A1%A5%E7%A0%81%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%B1%82%E5%80%BC%E6%96%B9%E6%B3%95/</link>
        <pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/blog/zh-cn/p/%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E8%A1%A5%E7%A0%81%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%B1%82%E5%80%BC%E6%96%B9%E6%B3%95/</guid>
        <description>&lt;h2 id=&#34;you&#34;&gt;&lt;strong&gt;You:&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;补码、原码、反码的英文分别是什么？他们如何求值？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;chatgpt&#34;&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;在计算机科学中，以下是补码、原码和反码的英文以及它们的求值方法：&lt;/p&gt;
&lt;h3 id=&#34;1-原码-sign-and-magnitude-representation&#34;&gt;&lt;strong&gt;1. 原码 (Sign-and-Magnitude Representation)&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：原码是一种直接表示整数的方法，其中最高位是符号位（0 表示正数，1 表示负数），其余位表示数值的绝对值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;求值方法&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;对于正数，原码与其二进制表示相同，符号位为 &lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;对于负数，符号位为 &lt;code&gt;1&lt;/code&gt;，其余位为绝对值的二进制表示。&lt;/li&gt;
&lt;li&gt;例如：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+5&lt;/code&gt; 的 8 位原码表示为：&lt;code&gt;00000101&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-5&lt;/code&gt; 的 8 位原码表示为：&lt;code&gt;10000101&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-反码-ones-complement-representation&#34;&gt;&lt;strong&gt;2. 反码 (One&amp;rsquo;s Complement Representation)&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：反码是通过对原码的数值部分逐位取反（0→1，1→0）来表示负数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;求值方法&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;对于正数，反码与其原码相同。&lt;/li&gt;
&lt;li&gt;对于负数，将绝对值的二进制表示逐位取反。&lt;/li&gt;
&lt;li&gt;例如：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+5&lt;/code&gt; 的 8 位反码表示为：&lt;code&gt;00000101&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-5&lt;/code&gt; 的 8 位反码表示为：&lt;code&gt;11111010&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-补码-twos-complement-representation&#34;&gt;&lt;strong&gt;3. 补码 (Two&amp;rsquo;s Complement Representation)&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：补码是现代计算机中最常用的有符号数表示方式，用于解决反码中有两个零的问题。负数的补码通过反码加 1 得到。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;求值方法&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;对于正数，补码与其原码相同。&lt;/li&gt;
&lt;li&gt;对于负数，补码可以通过以下两种方式计算：
&lt;ol&gt;
&lt;li&gt;将绝对值的二进制表示逐位取反后加 1。&lt;/li&gt;
&lt;li&gt;从模（如 &lt;code&gt;2^n&lt;/code&gt;，n 是位数）中减去绝对值。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;例如：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+5&lt;/code&gt; 的 8 位补码表示为：&lt;code&gt;00000101&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-5&lt;/code&gt; 的 8 位补码表示为：&lt;code&gt;11111011&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;strong&gt;总结&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数值&lt;/th&gt;
&lt;th&gt;原码（Sign-and-Magnitude）&lt;/th&gt;
&lt;th&gt;反码（One&amp;rsquo;s Complement）&lt;/th&gt;
&lt;th&gt;补码（Two&amp;rsquo;s Complement）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;+5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;00000101&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;00000101&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;00000101&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10000101&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;11111010&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;11111011&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;补码的表示和计算优势使其成为现代计算机的标准，用于加减法运算、移位等操作的实现。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
